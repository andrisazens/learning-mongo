When building indexes to service your queries, which of the following is the general rule of thumb you should keep when ordering your index keys?

Note, use the following definitions to for this question:

equality: indexed fields on which our queries will do equality matching
range: indexed fields on which our queries will have a range condition
sort: indexed fields on which our queries will sort on

Equality -> Sort -> Range order will be most performant

Lab 4

In this lab you're going to use the equality, sort, range rule to determine which index best supports a given query.

Given the following query:

db.accounts.find( { accountBalance : { $gte : NumberDecimal(100000.00) }, city: "New York" } )
           .sort( { lastName: 1, firstName: 1 } )
Which of the following indexes best supports this query with regards to the equality, sort, range rule.

Choose the best answer:
A { lastName: 1, firstName: 1, city: 1, accountBalance: 1 }
B { accountBalance: 1, city: 1, lastName: 1, firstName: 1 }
C { city: 1, lastName: 1, firstName: 1, accountBalance: 1 }
D { lastName: 1, firstName: 1, accountBalance: 1, city: 1 }


